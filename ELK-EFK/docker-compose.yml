version: '3.2'

services:
  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    restart: always
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - ./data/elasticsearch:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
#      - "9300:9300"
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200 >/dev/null || exit 1"]
      interval: 20s
      timeout: 10s
      retries: 5
    environment:
      ES_JAVA_OPTS: "-Xmx1024m -Xms1024m"
      ELASTIC_PASSWORD: changeme
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    networks:
      - elk

  fluentd:
    build: ./fluent
    container_name: fluentd
    volumes:
      - ./fluent/config:/fluentd/etc
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - elk

#   logstash:
#     build:
#       context: logstash/
#       args:
#         ELK_VERSION: $ELK_VERSION
#     restart: always
#     volumes:
#       - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
#       - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
# #    ports:
# #      - "5044:5044"
# #      - "5000:5000/tcp"
# #      - "5000:5000/udp"
# #      - "9600:9600"
#     environment:
#       LS_JAVA_OPTS: "-Xmx1024m -Xms1024m"
#     networks:
#       - elk
#     depends_on:
#       - elasticsearch

  kibana:
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    restart: always
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro
    ports:
      - "127.0.0.1:5601:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch

networks:
  elk:
    driver: bridge

