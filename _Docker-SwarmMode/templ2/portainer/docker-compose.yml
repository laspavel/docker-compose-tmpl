version: '3.9'

networks:
  agent_network:
    external: false
  public:
    external: true

volumes:
  portainer_data:

services:
  agent:
    image: portainer/agent:latest
    environment:
      # REQUIRED: Should be equal to the service name prefixed by "tasks." when
      # deployed inside an overlay network
      - "AGENT_CLUSTER_ADDR=tasks.agent"
      # AGENT_PORT: 9001
      # LOG_LEVEL: debug
      - "AGENT_SECRET=SECRET"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/var/lib/docker/volumes:/var/lib/docker/volumes"
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    networks:
      - agent_network
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]

  portainer:
    image: portainer/portainer-ce:latest
    #command: -H tcp://tasks.agent:9001 --tlsskipverify --http-enabled
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    volumes:
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
      - "portainer_data:/data"
    environment:
      - "AGENT_SECRET=SECRET"
    networks:
      - public
      - agent_network
    deploy:
      mode: replicated
      replicas: 1
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=public"

        - "traefik.http.routers.portainer-https.rule=Host(`portainer.example.com`)"
        - "traefik.http.routers.portainer-https.entrypoints=https"
        - "traefik.http.routers.portainer-https.tls=true"
        - "traefik.http.routers.portainer-https.service=portainer"
        - "traefik.http.services.portainer.loadbalancer.server.port=9000"

        - "traefik.http.routers.edge-https.rule=Host(`edge.example.com`)"
        - "traefik.http.routers.edge-https.entrypoints=https"
        - "traefik.http.routers.edge-https.service=edge"
        - "traefik.http.routers.edge-https.tls=true"
        - "traefik.http.services.edge.loadbalancer.server.port=8000"
